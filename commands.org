* What's this project
It's a set of scripts that downloads my playlists.

* How does it work?
** Playlists

This is how I associate youtube's playlist ID's to easily rememberable playlist file names.
#+begin_src bash :tangle yes :tangle commands.bash :comments org
  playlists=(
      PLEITERw4PaKFs_uS0MoXkIfGbsYJHmWVU:balatro.m3u
      PLyfXx1BeqwFbnI87AyqLP5XcEg1u5kydi:celeste.m3u
      PLyfXx1BeqwFZXtJPE153jA-8NJWz579Pb:hollow_knight.m3u
      PLyfXx1BeqwFYFwnXDZo6xYSIsek2x2fhp:silksong.m3u
      PLyfXx1BeqwFb9eMbR78HzJtvhAuGH2rnc:terraria.m3u
      PLyfXx1BeqwFY7_xMkP9BCAogmUQbwFBjc:calamity.m3u
      PLyfXx1BeqwFb0IcIT2_cbShbguqGOvnaq:calamity_infernum.m3u
      PLyfXx1BeqwFaO6xFIQXFhQTJtFdP4WYyc:baba.m3u
      PLyfXx1BeqwFakIcMEOb5L3hLLuTWHZhFv:deltarune.m3u
      PLyfXx1BeqwFZoI5JKqSOCYTq9_fxIqPPc:undertale.m3u
      PLyfXx1BeqwFYwjv_IHypwL_QeR4IT4rW_:isaac_rebirth.m3u
      PLyfXx1BeqwFYEsmSq2YcXYfPoSxhqUdKj:isaac_afterbirth.m3u
      PLyfXx1BeqwFYukH-L7NXfhom6UPaSb33N:isaac_repentance.m3u
      PLyfXx1BeqwFZfbk9ksALFm-Q6hmQPacQ1:isaac_antibirth.m3u
      PLyfXx1BeqwFZ3paVLhJwsHpuWM4zlhLPj:minecraft.m3u
      PLyfXx1BeqwFYtf2Dntv405dH8I9FP5GcV:stardew_valley.m3u
      PLyfXx1BeqwFZw1-JcUkkxHcodnwr_W6Nd:cassette_beasts.m3u
      PLyfXx1BeqwFYNtQ2sBVUvZ0_PUYvGLe_x:RoA.m3u
      PLyfXx1BeqwFYvPfUFBjkZvmpFYFbSJQ2R:rhythm_doctor.m3u
      PLyfXx1BeqwFbcG-8eBmiIbmDtNmn4tq2H:luck_be_a_landlord.m3u
      PLyfXx1BeqwFZcwV_yqpe5khtlKWGf0jM_:anime.m3u
      PLyfXx1BeqwFZzRwmxQ1To7HQN37pj1EAs:misc.m3u
  )
#+end_src

** Generating the playlist files concurrently

This is pretty gnarly by my standards.
Basically, you make an array to sequence commands by looping once and then running the long running tasks in parallel by launching multiple subshells and using '&'.

It's important that this runs in a subshell or else ctrl-c wouldn't kill all the processes.
#+begin_src bash :tangle yes :tangle commands.bash :comments org
  commands=()

  mkdir playlists

  for playlist_item in ${playlists[@]}; do
      commands+=("echo \"Generating $(echo ${playlist_item##*:})\" & yt-dlp --restrict-filenames -o '../pool/%(title)s.opus' --get-filename \" \$(echo ${playlist_item##:*})\" > \"$(echo playlists/${playlist_item##*:})\" &")
  done

  (trap 'kill 0' SIGINT; eval ${commands[*]} wait)
#+end_src

** Generating custom playlists

This simply generates the everything playlist which represents all the songs.

More playlists coming soon...
#+begin_src bash :tangle yes :tangle commands.bash :comments org
  eval "cat ${playlists[@]//*:/playlists\/} > playlists/everything.m3u"
#+end_src

** Slowing down balatro tracks

I wanted to sequence this, however, I couldn't get this to work for whatever reason, it seemed to hang. It's only 5 tracks though, so it's not really a big issue.

Tracks are slowed down to 75% of of their original speed, just like in the game.
#+begin_src bash :tangle yes :tangle commands.bash :comments org
  handle_balatro () {
      mkdir -p "pool/tmp"
      cd "pool/tmp"
      echo "$(echo ${1##:*})"
      yt-dlp -x --audio-quality 0 --audio-format opus --restrict-filenames -o '%(title)s' "$(echo ${1##:*})";
      balatro_list=($(ls))
      for track in ${balatro_list[@]}; do
	  echo "track: ($track)"
	  ffmpeg -y -i "$track" -strict -2 -filter:a "atempo=0.75" -vn "../$track"
      done

      cd "../.."
      rm "pool/tmp" -r
  }
#+end_src

** Downloading all the playlist songs in parallel

Again, I sequence operations, then run them all at once.
#+begin_src bash :tangle yes :tangle commands.bash :comments org
  commands=()

  for playlist_item in ${playlists[@]}; do
      if [ "balatro.m3u" = "$(echo ${playlist_item##*:})" ]; then
	  commands+=("echo \"\" & handle_balatro \"$playlist_item\" &")
      else
	  commands+=("echo \"Downloading: $(echo ${playlist_item##:*})\" & yt-dlp -x --audio-quality 0 --audio-format opus --restrict-filenames -o 'pool/%(title)s' \"$(echo ${playlist_item##:*})\" &")
      fi
  done;

  (trap 'kill 0' SIGINT; eval ${commands[*]} wait)
#+end_src
* How to run
To extract source code in emacs use the *org-babel-tangle* or *org-babel-tangle-file*
/C-c C-v C-t/ and /C-c C-v C-f/ respectively.

Then run the commands.bash script
* Goals [14/15]
  - [X] Tailored playlist
  - [X] Terraria
    - [X] ID acquired
    - [X] Playlist generated
  - [X] Calamity Mod (Including extra)
    - [X] ID acquired
    - [X] Playlist generated
  - [X] Calamity Infernum Mod
    - [X] ID acquired
    - [X] Playlist generated
  - [X] Baba
    - [X] ID acquired
    - [X] Playlist generated
  - [X] Deltarune
    - [X] ID acquired
    - [X] Playlist generated
  - [X] Undertale
    - [X] ID acquired
    - [X] Playlist generated
  - [X] Isaac [4/4]
    - [X] Issac Rebirth
      - [X] ID acquired
      - [X] Playlist generated
    - [X] Isaac Afterbirth
      - [X] ID acquired
      - [X] Playlist generated
    - [X] Isaac Repentance
      - [X] ID acquired
      - [X] Playlist generated
    - [X] Isaac Antibirth
      - [X] ID acquired
      - [X] Playlist generated
  - [X] Minecraft
    - [X] ID acquired
    - [X] Playlist generated
  - [X] Stardew Valley
    - [X] ID acquired
    - [X] Playlist generated
  - [X] Cassette beasts
    - [X] ID acquired
    - [X] Playlist generated
  - [X] Rivals of aether
    - [X] ID acquired
    - [X] Playlist generated
  - [X] Rhythm doctor
    - [X] ID acquired
    - [X] Playlist generated
  - [ ] Drawn to life: The next chapter
    - [ ] ID acquired
    - [ ] Playlist generated
  - [X] TF2
    - [X] ID acquired
    - [X] Playlist generated
* Random Playlist
** making it
  - [X] Make a youtube playlist with random stuff
    - [X] ID acquired
    - [X] Platlist generated
** Playlist items
  - [X] Naz - Tay K Returns to Dreamland 4
  - [X] Pink Clouds and sticky rain (lookup xidnaf)
  - [X] smash bros brawl main theme
  - [X] smash bros ultimate main theme
  - [X] Xomu - Walpurgis Night
  - [X] Terraria Slimeium Mod OST - Gelatinous Grasslands
